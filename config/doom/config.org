#+title: Emacs Config: Base
#+author: Cash Weaver
#+email: cashbweaver@gmail.com

* Overview

Welcome to my Emacs configuration! I've split my work and personal configuration files as (1) I need slighly different things in my work environment and (2) I depend on private plugins for work which I don't have the rights to publish. The work configuration files build on top of the personal ones.

* Introduction
** Literate Programming

My configuration files use literate programming. As an example of literate programming with =org-mode=, let's generate a throw-away file, =foo.md=. First, we'll add the title:

#+begin_example
,#+begin_src md :tangle foo.md
# Foo
,#+end_src
#+end_example

Notice that I specified the syntax (=md=) and the file to output the content to (=foo.md=). Next, let's add a list of my favorite colors.

#+begin_example
,#+begin_src md :tangle foo.md
1. Orange
1. Blue
1. Red
,#+end_src
#+end_example

Now we can run =org-babel-tangle= to extract the content of these two blocks and create =foo.md=. The newly generated =foo.md= will contain:

#+begin_example
,#+begin_src md
# Foo

1. Orange
1. Blue
1. Red
,#+end_src
#+end_example

** Function and Variable Naming Convention

I prefix all of my own functions and variables with =cashpw/= to prevent any unintentional overlaps.

#+begin_src emacs-lisp
(setq
 cashpw/favorite-color "orange")
#+end_src

"Private" functions and variables -- those I wouldn't indend to be accessed directly -- are prefixed with =cashpw/-= (note the two =-='s).

#+begin_src emacs-lisp
(setq
 cashpw/-secret-color "blue")
#+end_src

Additionally, variables and functions which are in a "library"/group are prefixed with either =cashpw/<library name>-= or =cashpw/<library name>--=, depending on their intended visibility.

#+begin_src emacs-lisp
(setq
 cashpw/colors-favorite "orange"
 cashpw/colors--secret "blue")
#+end_src

* Home Directory

#+name: cashpw/home-dir
#+begin_src emacs-lisp
(defvar cashpw/path--personal-home-dir
  "/home/cashweaver"
  "Path to home directory on my personal machine.")

(defvar cashpw/path--work-home-dir
  "/usr/local/google/home/cashweaver"
  "Path to home directory on my work machine(s).")

(defvar cashpw/path--work-cloudtop-id-file
  "/usr/local/google/home/cashweaver/is-cloudtop"
  "File that, when present, indicates the current machine is my Cloudtop instance.")

(defun cashpw/is-personal-p ()
  "Return true if executed on my work machine."
  (file-directory-p
   cashpw/path--personal-home-dir))

(defun cashpw/is-work-p ()
  "Return true if executed on my work machine."
  (file-directory-p
   cashpw/path--work-home-dir))

(defun cashpw/is-work-cloudtop-p ()
  "Return true if executed on my work machine."
  (file-exists-p
   cashpw/path--work-cloudtop-id-file))

(defcustom cashpw/path--home-dir
  (cond
   ((cashpw/is-personal-p)
    cashpw/path--personal-home-dir)
   ((cashpw/is-work-p)
    cashpw/path--work-home-dir)
   (t
    cashpw/path--personal-home-dir))
  "Path to home directory.")

(defcustom cashpw/path--config-dir
  (format "%s/.config" cashpw/path--home-dir)
  "Full path to configuration files.")

(defcustom cashpw/path--emacs-config-dir
  (format "%s/doom" cashpw/path--config-dir)
  "Full path to Emacs configuration files.")
#+end_src

#+RESULTS: cashpw/home-dir
: cashpw/path--emacs-config-dir

#+begin_src emacs-lisp :tangle config.el :noweb no-export
<<cashpw/home-dir>>
#+end_src

#+begin_src emacs-lisp :tangle packages.el :noweb no-export
<<cashpw/home-dir>>
#+end_src

* Path to Local Packages

#+begin_src emacs-lisp :tangle packages.el
(defvar cashpw/path--third-party-dir
  (if (cashpw/is-work-p)
      "/usr/local/google/home/cashweaver/third_party"
    "/home/cashweaver/third_party")
  "Path to third-party files.")
#+end_src

#+RESULTS:
: cashpw/path--third-party-dir

* Load Additional Config Files

Configuration files should follow the naming convention =(config|packages)-<type>.el= (eg: =config-personal.el=).

** Packages

#+begin_src emacs-lisp :tangle packages.el :noweb no-export
(load (format "%s/packages-personal.el" cashpw/path--emacs-config-dir))
(when (cashpw/is-work-cloudtop-p)
  (load (format "%s/packages-work.el" cashpw/path--emacs-config-dir)))
#+end_src

** Config

#+begin_src emacs-lisp :tangle config.el :noweb no-export
(load (format "%s/config-personal.el" cashpw/path--emacs-config-dir))
(when (cashpw/is-work-cloudtop-p)
  (load (format "%s/config-work.el" cashpw/path--emacs-config-dir)))
#+end_src
